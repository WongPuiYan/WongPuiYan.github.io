[{"categories":["算法"],"content":"移除元素 ","date":"2023-06-29","objectID":"/remove-element/:0:0","tags":["数组","双指针"],"title":"移除元素","uri":"/remove-element/"},{"categories":["算法"],"content":"27. 移除元素 给你一个数组 nums 和一个值 val，你需要 原地 移除所有数值等于 val 的元素，并返回移除后数组的新长度。 不要使用额外的数组空间，你必须仅使用 O(1) 额外空间并 原地 修改输入数组。 元素的顺序可以改变。你不需要考虑数组中超出新长度后面的元素。 # 双指针 class Solution: def removeElement(self, nums: List[int], val: int) -\u003e int: slow = 0 for fast in nums: if fast != val: nums[slow] = fast slow += 1 return slow # 双指针优化 class Solution: def removeElement(self, nums: List[int], val: int) -\u003e int: left, right = 0, len(nums) while left \u003c right: if nums[left] == val: nums[left] = nums[right - 1] right -= 1 else: left += 1 return left // 双指针 func removeElement(nums []int, val int) int { var( slow int = 0 ) for _, fast := range nums{ if (fast != val) { nums[slow] = fast slow++ } } return slow } // 双指针优化 func removeElement(nums []int, val int) int { var( left int = 0 right int = len(nums) ) for(left \u003c right) { if nums[left] == val { nums[left] = nums[right - 1] right-- }else{ left++ } } return left } ","date":"2023-06-29","objectID":"/remove-element/:1:0","tags":["数组","双指针"],"title":"移除元素","uri":"/remove-element/"},{"categories":["算法"],"content":"二分查找 ","date":"2023-06-28","objectID":"/binary-search/:0:0","tags":["数组","双指针","二分查找"],"title":"二分查找","uri":"/binary-search/"},{"categories":["算法"],"content":"704. 二分查找 给定一个 n 个元素有序的（升序）整型数组 nums 和一个目标值 target ，写一个函数搜索 nums 中的 target，如果目标值存在返回下标，否则返回 -1。 Class Solution: def search(sefl, nums: List[int], target: int) -\u003e int: left, right = 0, len(nums) - 1 while left \u003c= right: mid = left + (right - left) // 2 if target \u003e nums[mid]: left = mid + 1 elif target \u003c nums[mid]: right = mid - 1 else: return mid return -1 func search(nums []int, target int) int { var( left int = 0 right int = len(nums) - 1 mid int ) for left \u003c= right { mid = left + (right - left) // 2 if (num[mid] \u003c target){ left = mid + 1 }else if (num[mid] \u003e target){ right = mid - 1 }else{ return mid } } return -1 } ","date":"2023-06-28","objectID":"/binary-search/:1:0","tags":["数组","双指针","二分查找"],"title":"二分查找","uri":"/binary-search/"},{"categories":null,"content":"POSTs first print(\"Hello World\") ","date":"2023-06-27","objectID":"/base/:0:0","tags":null,"title":"Base","uri":"/base/"}]