<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>双指针 - Tag - 揾食啫</title><link>https://wongpuiyan.github.io/tags/%E5%8F%8C%E6%8C%87%E9%92%88/</link><description>双指针 - Tag - 揾食啫</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>neowong@qq.com (NeoWong)</managingEditor><webMaster>neowong@qq.com (NeoWong)</webMaster><lastBuildDate>Tue, 11 Jul 2023 20:29:18 +0800</lastBuildDate><atom:link href="https://wongpuiyan.github.io/tags/%E5%8F%8C%E6%8C%87%E9%92%88/" rel="self" type="application/rss+xml"/><item><title>滑动窗口最大值</title><link>https://wongpuiyan.github.io/239-sliding-window-maximum/</link><pubDate>Tue, 11 Jul 2023 20:29:18 +0800</pubDate><author>NeoWong</author><guid>https://wongpuiyan.github.io/239-sliding-window-maximum/</guid><description>&lt;h2 id="leetcode-239-滑动窗口最大值">Leetcode 239. 滑动窗口最大值&lt;/h2>
&lt;p>给你一个整数数组 nums，有一个大小为 k 的滑动窗口从数组的最左侧移动到数组的最右侧。你只可以看到在滑动窗口内的 k 个数字。滑动窗口每次只向右移动一位。
返回 滑动窗口中的最大值 。&lt;/p></description></item><item><title>删除字符串中的所有相邻重复项</title><link>https://wongpuiyan.github.io/1047-remove-all-adjacent-duplicates-in-string/</link><pubDate>Tue, 11 Jul 2023 20:28:13 +0800</pubDate><author>NeoWong</author><guid>https://wongpuiyan.github.io/1047-remove-all-adjacent-duplicates-in-string/</guid><description>&lt;h2 id="1047-删除字符串中的所有相邻重复项">1047. 删除字符串中的所有相邻重复项&lt;/h2>
&lt;p>给出由小写字母组成的字符串 S，重复项删除操作会选择两个相邻且相同的字母，并删除它们。
在 S 上反复执行重复项删除操作，直到无法继续删除。
在完成所有重复项删除操作后返回最终的字符串。答案保证唯一。&lt;/p></description></item><item><title>反转字符串</title><link>https://wongpuiyan.github.io/344-reverse-string/</link><pubDate>Thu, 06 Jul 2023 23:40:05 +0800</pubDate><author>NeoWong</author><guid>https://wongpuiyan.github.io/344-reverse-string/</guid><description>&lt;h2 id="leetcode-344-反转字符串">Leetcode 344. 反转字符串&lt;/h2>
&lt;p>编写一个函数，其作用是将输入的字符串反转过来。输入字符串以字符数组 s 的形式给出。
不要给另外的数组分配额外的空间，你必须原地修改输入数组、使用 O(1) 的额外空间解决这一问题。&lt;/p></description></item><item><title>四数之和</title><link>https://wongpuiyan.github.io/18-4sum/</link><pubDate>Thu, 06 Jul 2023 23:39:40 +0800</pubDate><author>NeoWong</author><guid>https://wongpuiyan.github.io/18-4sum/</guid><description><![CDATA[<h2 id="leetcode-18-四数之和">Leetcode 18. 四数之和</h2>
<p>给你一个由 n 个整数组成的数组 nums ，和一个目标值 target 。请你找出并返回满足下述全部条件且不重复的四元组 [nums[a], nums[b], nums[c], nums[d]] （若两个四元组元素一一对应，则认为两个四元组重复）：</p>
<ul>
<li>0 &lt;= a, b, c, d &lt; n</li>
<li>a、b、c 和 d 互不相同</li>
<li>nums[a] + nums[b] + nums[c] + nums[d] == target</li>
</ul>
<p>你可以按 任意顺序 返回答案 。</p>]]></description></item><item><title>三数之和</title><link>https://wongpuiyan.github.io/15-3sum/</link><pubDate>Thu, 06 Jul 2023 23:39:18 +0800</pubDate><author>NeoWong</author><guid>https://wongpuiyan.github.io/15-3sum/</guid><description>&lt;h2 id="leetcode-15-三数之和">leetcode 15. 三数之和&lt;/h2>
&lt;p>给你一个整数数组 nums ，判断是否存在三元组 [nums[i], nums[j], nums[k]] 满足 i != j、i != k 且 j != k ，同时还满足 nums[i] + nums[j] + nums[k] == 0 。请
你返回所有和为 0 且不重复的三元组。
注意：答案中不可以包含重复的三元组。&lt;/p></description></item><item><title>四数相加 II</title><link>https://wongpuiyan.github.io/454-4sum-ii/</link><pubDate>Wed, 05 Jul 2023 22:36:18 +0800</pubDate><author>NeoWong</author><guid>https://wongpuiyan.github.io/454-4sum-ii/</guid><description><![CDATA[<h2 id="leetcode-454-四数相加-ii">Leetcode 454. 四数相加 II</h2>
<p>给你四个整数数组 nums1、nums2、nums3 和 nums4 ，数组长度都是 n ，请你计算有多少个元组 (i, j, k, l) 能满足：</p>
<ul>
<li>0 &lt;= i, j, k, l &lt; n</li>
<li>nums1[i] + nums2[j] + nums3[k] + nums4[l] == 0</li>
</ul>]]></description></item><item><title>快乐数</title><link>https://wongpuiyan.github.io/202-happy-number/</link><pubDate>Wed, 05 Jul 2023 00:12:30 +0800</pubDate><author>NeoWong</author><guid>https://wongpuiyan.github.io/202-happy-number/</guid><description><![CDATA[<h2 id="leetcode-202-快乐数">Leetcode 202. 快乐数</h2>
<p>编写一个算法来判断一个数 n 是不是快乐数。</p>
<p>「快乐数」 定义为：</p>
<p>对于一个正整数，每一次将该数替换为它每个位置上的数字的平方和。
然后重复这个过程直到这个数变为 1，也可能是 无限循环 但始终变不到 1。
如果这个过程 结果为 1，那么这个数就是快乐数。
如果 n 是 快乐数 就返回 true ；不是，则返回 false 。</p>]]></description></item><item><title>环形链表 II</title><link>https://wongpuiyan.github.io/142-linked-list-cycle-ii/</link><pubDate>Tue, 04 Jul 2023 00:58:15 +0800</pubDate><author>NeoWong</author><guid>https://wongpuiyan.github.io/142-linked-list-cycle-ii/</guid><description><![CDATA[<h2 id="leetcode-142-环形链表-ii">Leetcode 142. 环形链表 II</h2>
<p>给定一个链表的头节点  head ，返回链表开始入环的第一个节点。 如果链表无环，则返回 null。</p>
<p>如果链表中有某个节点，可以通过连续跟踪 next 指针再次到达，则链表中存在环。 为了表示给定链表中的环，评测系统内部使用整数 pos 来表示链表尾连接到链表中的位置（索引从 0 开始）。如果 pos 是 -1，则在该链表中没有环。注意：pos 不作为参数进行传递，仅仅是为了标识链表的实际情况。</p>
<p>不允许修改 链表。</p>]]></description></item><item><title>链表相交</title><link>https://wongpuiyan.github.io/160-intersection-of-two-linked-lists-lcci/</link><pubDate>Tue, 04 Jul 2023 00:43:03 +0800</pubDate><author>NeoWong</author><guid>https://wongpuiyan.github.io/160-intersection-of-two-linked-lists-lcci/</guid><description><![CDATA[<h2 id="leetcode-160-链表相交-同面试题0207">Leetcode 160. 链表相交 (同面试题02.07)</h2>
<p>给你两个单链表的头节点 headA 和 headB ，请你找出并返回两个单链表相交的起始节点。如果两个链表没有交点，返回 null 。</p>
<p>题目数据 保证 整个链式结构中不存在环。</p>
<p>注意，函数返回结果后，链表必须 保持其原始结构 。</p>]]></description></item><item><title>删除链表的倒数第 N 个结点</title><link>https://wongpuiyan.github.io/19-remove-nth-node-from-end-of-list/</link><pubDate>Tue, 04 Jul 2023 00:40:30 +0800</pubDate><author>NeoWong</author><guid>https://wongpuiyan.github.io/19-remove-nth-node-from-end-of-list/</guid><description>&lt;h2 id="leetcode-19-删除链表的倒数第-n-个结点">Leetcode 19. 删除链表的倒数第 N 个结点&lt;/h2>
&lt;p>给你一个链表，删除链表的倒数第 n 个结点，并且返回链表的头结点。&lt;/p></description></item></channel></rss>